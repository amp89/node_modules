{"remainingRequest":"/Users/someone/dev/file_cdn_share_ui/node_modules/babel-loader/lib/index.js!/Users/someone/dev/file_cdn_share_ui/node_modules/eslint-loader/index.js??ref--13-0!/Users/someone/dev/file_cdn_share_ui/src/store/modules/cdn_app.js","dependencies":[{"path":"/Users/someone/dev/file_cdn_share_ui/src/store/modules/cdn_app.js","mtime":1574134869931},{"path":"/Users/someone/dev/file_cdn_share_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/someone/dev/file_cdn_share_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/someone/dev/file_cdn_share_ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/someone/dev/file_cdn_share_ui/src/store/modules/cdn_app.js"],"names":["axios","read","state","loggedIn","accessToken","refreshToken","uploadFile","getters","persistedLoggedInState","actions","commit","dispatch","reader","FileReader","console","log","onload","e","fileData","target","result","post","headers","readAsDataURL","saveUploadFileToState","file","fetchLoginState","then","res","parseInt","status","logout","login","data","u","p","catch","err","refreshLogin","mutations","clearUploadFileFromState","setLoginState","loginBool","setRefreshToken","newToken","setAccessToken"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { read } from 'fs';\n\n\nconst state = {\n    loggedIn: false,\n    accessToken: null,\n    refreshToken: null,\n    uploadFile: null,\n}\n\n\nconst getters = {\n    persistedLoggedInState: (state) => state.loggedIn,\n    // persistedAccessToken: (state) => state.accessToken,\n    // persistedRefreshToken: (state) => state.refreshToken,\n    \n}\n\nconst actions = {\n\n    async uploadFile({commit, state, dispatch}){\n        const reader = new FileReader()\n        console.log(\"this is indeed a file, right...? \", state.uploadFile)\n        // var file_data = reader.readAsDataURL(state.uploadFile)\n        \n        reader.onload = (e) => {\n            let fileData = e.target.result\n            axios.post(\"http://localhost:8000/api/cdn/upload/\", fileData, {headers: {\"Content-Disposition\":\"Content-Disposition: attachment; filename=testfis654dfle.css\", \"Authentication\": `Bearer ${state.accessToken}`}})\n        }\n        await reader.readAsDataURL(state.uploadFile)\n\n        console.log(\"RR: \", reader.result)\n        \n        \n        \n        // commit(\"clearUploadFileFromState\")\n    },\n    async saveUploadFileToState({commit}, file){\n        console.log(file)\n        commit(\"saveUploadFileToState\", file)\n    },\n\n    async fetchLoginState({commit, state}){\n\n        axios.post(\n                    \"http://localhost:8000/api/token/verify/\",\n                    {\"token\": state.accessToken}, {'Content-Type': 'application/json', \"Authentication\": `Bearer ${state.accessToken}`}).then(\n            res => {\n                console.log(`TOKEN ${state.accessToken}`)\n                if(parseInt(res.status) == 200){\n                    commit(\"setLoginState\", true)\n                }else{\n                    commit(\"setLoginState\", false)\n                }\n            }\n        )\n    },\n\n    async logout({commit, state}){\n        commit(\"logout\")\n    },\n\n    async login({commit}, data){\n\n        axios.post(\"http://localhost:8000/api/token/\", {\"username\":data.u,\"password\":data.p}, {'Content-Type': 'application/json'}).then(\n            res => {\n                commit(\"setAccessToken\", res.data[\"access\"])\n                commit(\"setRefreshToken\", res.data[\"refresh\"])\n                commit(\"setLoginState\", true)\n            }\n        ).catch(\n            err => {\n                console.log(\"login failed\")\n            }\n        )\n    },\n\n    async refreshLogin({commit, state}){\n        axios.post(\"http://localhost:8000/api/refresh/\", {\"refresh\":state.refreshToken}, {'Content-Type': 'application/json'}).then(\n            res => {\n                console.log(`NEW TOKEN ${res.data[\"access\"]}`)\n                commit(\"setAccessToken\", res.data[\"access\"])\n            }\n        ).catch(\n            err => {\n                console.log(\"refresh failed\")\n                commit(\"setLoginState\", false)\n            }\n        )\n    }\n}\n\nconst mutations = {\n    logout: (state) => {\n        state.loggedIn = false,\n        state.refreshToken = null,\n        state.accessToken = null\n    },\n    saveUploadFileToState: (state, file) => state.uploadFile = file,\n    clearUploadFileFromState: (state) => state.uploadFile = null,\n    setLoginState: (state, loginBool) => state.loggedIn = loginBool,\n    setRefreshToken: (state, newToken) => state.refreshToken = newToken,\n    setAccessToken: (state, newToken) => state.accessToken = newToken,\n}\n\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}