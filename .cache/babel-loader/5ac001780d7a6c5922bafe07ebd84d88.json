{"remainingRequest":"/Users/someone/dev/file_cdn_share_ui/node_modules/thread-loader/dist/cjs.js!/Users/someone/dev/file_cdn_share_ui/node_modules/babel-loader/lib/index.js!/Users/someone/dev/file_cdn_share_ui/node_modules/eslint-loader/index.js??ref--13-0!/Users/someone/dev/file_cdn_share_ui/src/store/modules/cdn_app.js","dependencies":[{"path":"/Users/someone/dev/file_cdn_share_ui/src/store/modules/cdn_app.js","mtime":1574031764071},{"path":"/Users/someone/dev/file_cdn_share_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/someone/dev/file_cdn_share_ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/someone/dev/file_cdn_share_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/someone/dev/file_cdn_share_ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHN0YXRlID0gewogIGxvZ2dlZEluOiBmYWxzZSwKICBhY2Nlc3NUb2tlbjogbnVsbCwKICByZWZyZXNoVG9rZW46IG51bGwKfTsKdmFyIGdldHRlcnMgPSB7CiAgcGVyc2lzdGVkTG9nZ2VkSW5TdGF0ZTogZnVuY3Rpb24gcGVyc2lzdGVkTG9nZ2VkSW5TdGF0ZShzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmxvZ2dlZEluOwogIH0gLy8gcGVyc2lzdGVkQWNjZXNzVG9rZW46IChzdGF0ZSkgPT4gc3RhdGUuYWNjZXNzVG9rZW4sCiAgLy8gcGVyc2lzdGVkUmVmcmVzaFRva2VuOiAoc3RhdGUpID0+IHN0YXRlLnJlZnJlc2hUb2tlbiwKCn07CnZhciBhY3Rpb25zID0gewogIGZldGNoTG9naW5TdGF0ZTogZnVuY3Rpb24gZmV0Y2hMb2dpblN0YXRlKF9yZWYpIHsKICAgIHZhciBjb21taXQsIHN0YXRlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBmZXRjaExvZ2luU3RhdGUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdCwgc3RhdGUgPSBfcmVmLnN0YXRlOwogICAgICAgICAgICBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3Rva2VuL3ZlcmlmeS8iLCB7CiAgICAgICAgICAgICAgInRva2VuIjogc3RhdGUuYWNjZXNzVG9rZW4KICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgIkF1dGhlbnRpY2F0aW9uIjogIkJlYXJlciAiLmNvbmNhdChzdGF0ZS5hY2Nlc3NUb2tlbikKICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIlRPS0VOICIuY29uY2F0KHN0YXRlLmFjY2Vzc1Rva2VuKSk7CgogICAgICAgICAgICAgIGlmIChwYXJzZUludChyZXMuc3RhdHVzKSA9PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0TG9naW5TdGF0ZSIsIHRydWUpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb21taXQoInNldExvZ2luU3RhdGUiLCBmYWxzZSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgICAgY29tbWl0KCJzZXRMb2dpblN0YXRlIiwgZmFsc2UpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfSwKICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZjIsIGRhdGEpIHsKICAgIHZhciBjb21taXQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGxvZ2luJChfY29udGV4dDIpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3Rva2VuLyIsIHsKICAgICAgICAgICAgICAidXNlcm5hbWUiOiBkYXRhLnUsCiAgICAgICAgICAgICAgInBhc3N3b3JkIjogZGF0YS5wCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgIGNvbW1pdCgic2V0QWNjZXNzVG9rZW4iLCByZXMuZGF0YVsiYWNjZXNzIl0pOwogICAgICAgICAgICAgIGNvbW1pdCgic2V0UmVmcmVzaFRva2VuIiwgcmVzLmRhdGFbInJlZnJlc2giXSk7CiAgICAgICAgICAgICAgY29tbWl0KCJzZXRMb2dpblN0YXRlIiwgdHJ1ZSk7CiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygibG9naW4gZmFpbGVkIik7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfSwKICByZWZyZXNoTG9naW46IGZ1bmN0aW9uIHJlZnJlc2hMb2dpbihfcmVmMykgewogICAgdmFyIGNvbW1pdCwgc3RhdGU7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHJlZnJlc2hMb2dpbiQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdCwgc3RhdGUgPSBfcmVmMy5zdGF0ZTsKICAgICAgICAgICAgYXhpb3MucG9zdCgiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS9yZWZyZXNoLyIsIHsKICAgICAgICAgICAgICAicmVmcmVzaCI6IHN0YXRlLnJlZnJlc2hUb2tlbgogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiTkVXIFRPS0VOICIuY29uY2F0KHJlcy5kYXRhWyJhY2Nlc3MiXSkpOwogICAgICAgICAgICAgIGNvbW1pdCgic2V0QWNjZXNzVG9rZW4iLCByZXMuZGF0YVsiYWNjZXNzIl0pOwogICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coInJlZnJlc2ggZmFpbGVkIik7CiAgICAgICAgICAgICAgY29tbWl0KCJzZXRMb2dpblN0YXRlIiwgZmFsc2UpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRMb2dpblN0YXRlOiBmdW5jdGlvbiBzZXRMb2dpblN0YXRlKHN0YXRlLCBsb2dpbkJvb2wpIHsKICAgIHJldHVybiBzdGF0ZS5sb2dnZWRJbiA9IGxvZ2luQm9vbDsKICB9LAogIHNldFJlZnJlc2hUb2tlbjogZnVuY3Rpb24gc2V0UmVmcmVzaFRva2VuKHN0YXRlLCBuZXdUb2tlbikgewogICAgcmV0dXJuIHN0YXRlLnJlZnJlc2hUb2tlbiA9IG5ld1Rva2VuOwogIH0sCiAgc2V0QWNjZXNzVG9rZW46IGZ1bmN0aW9uIHNldEFjY2Vzc1Rva2VuKHN0YXRlLCBuZXdUb2tlbikgewogICAgcmV0dXJuIHN0YXRlLmFjY2Vzc1Rva2VuID0gbmV3VG9rZW47CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/someone/dev/file_cdn_share_ui/src/store/modules/cdn_app.js"],"names":["axios","state","loggedIn","accessToken","refreshToken","getters","persistedLoggedInState","actions","fetchLoginState","commit","post","then","res","console","log","parseInt","status","catch","err","login","data","u","p","refreshLogin","mutations","setLoginState","loginBool","setRefreshToken","newToken","setAccessToken"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\n\nconst state = {\n    loggedIn: false,\n    accessToken: null,\n    refreshToken: null,\n}\n\n\nconst getters = {\n    persistedLoggedInState: (state) => state.loggedIn,\n    // persistedAccessToken: (state) => state.accessToken,\n    // persistedRefreshToken: (state) => state.refreshToken,\n    \n}\n\nconst actions = {\n    async fetchLoginState({commit, state}){\n\n        axios.post(\n                    \"http://localhost:8000/api/token/verify/\",\n                    {\"token\": state.accessToken}, {'Content-Type': 'application/json', \"Authentication\": `Bearer ${state.accessToken}`}).then(\n            res => {\n                console.log(`TOKEN ${state.accessToken}`)\n                if(parseInt(res.status) == 200){\n                    commit(\"setLoginState\", true)\n                }else{\n                    commit(\"setLoginState\", false)\n                }\n            }\n        ).catch(\n            err => {\n                commit(\"setLoginState\", false)\n            }\n        )\n    },\n\n    async login({commit}, data){\n\n        axios.post(\"http://localhost:8000/api/token/\", {\"username\":data.u,\"password\":data.p}, {'Content-Type': 'application/json'}).then(\n            res => {\n                commit(\"setAccessToken\", res.data[\"access\"])\n                commit(\"setRefreshToken\", res.data[\"refresh\"])\n                commit(\"setLoginState\", true)\n            }\n        ).catch(\n            err => {\n                console.log(\"login failed\")\n            }\n        )\n    },\n\n    async refreshLogin({commit, state}){\n        axios.post(\"http://localhost:8000/api/refresh/\", {\"refresh\":state.refreshToken}, {'Content-Type': 'application/json'}).then(\n            res => {\n                console.log(`NEW TOKEN ${res.data[\"access\"]}`)\n                commit(\"setAccessToken\", res.data[\"access\"])\n            }\n        ).catch(\n            err => {\n                console.log(\"refresh failed\")\n                commit(\"setLoginState\", false)\n            }\n        )\n    }\n}\n\nconst mutations = {\n    \n    setLoginState: (state, loginBool) => state.loggedIn = loginBool,\n    setRefreshToken: (state, newToken) => state.refreshToken = newToken,\n    setAccessToken: (state, newToken) => state.accessToken = newToken,\n}\n\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}